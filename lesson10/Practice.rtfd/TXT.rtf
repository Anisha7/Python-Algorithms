{\rtf1\ansi\ansicpg1252\cocoartf1561
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 CourierNewPSMT;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww23720\viewh18440\viewkind0
\deftab720
\pard\pardeftab720\sl400\partightenfactor0

\f0\fs36 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  
\f1 \
\pard\pardeftab720\sl400\qc\partightenfactor0

\f0 \cf2 \ul \ulc2 Week 10 Practice Quiz
\f1 \ulnone \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl400\partightenfactor0

\f0 \cf2 Code Tracing:
\f1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl380\partightenfactor0

\f2 \cf2 \cb3 def \'a0\'a0\'a0\'a0f(x, \'a0\'a0y):\cb1 \uc0\u8232 \cb3  \'a0\'a0\'a0if \'a0\'a0\'a0\'a0\'a0(x \'a0< \'a0y): \'a0\'a0\'a0\'a0return \'a0f(y, \'a0\'a0x)\cb1 \uc0\u8232 \cb3  \'a0\'a0\'a0elif \'a0\'a0\'a0(y \'a0== \'a00): \'a0\'a0\'a0\'a0return \'a0x\cb1 \uc0\u8232 \cb3  \'a0\'a0\'a0else: \'a0\'a0return \'a0f(x-1, y-1)\cb1 \uc0\u8232 \cb3  \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cb1 \uc0\u8232 \cb3 print \'a0\'a0(f(876, 888))
\f1 \cb1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\
\
\
\
\
\pard\pardeftab720\fi960\sl380\partightenfactor0

\f2 \cf2 \cb3 def ct(L, \'a0n=4):\cb1 \uc0\u8232 \cb3  \'a0\'a0\'a0if \'a0(L \'a0== \'a0[ \'a0\'a0]):\cb1 \uc0\u8232 \cb3  \'a0\'a0\'a0\'a0\'a0\'a0\'a0return \'a0L\cb1 \uc0\u8232 \cb3  \'a0\'a0\'a0else:\cb1 \uc0\u8232 \cb3  \'a0\'a0\'a0\'a0\'a0\'a0\'a0return \'a0[L[0]**n] \'a0\'a0+ \'a0\'a0ct(L[1:], \'a0n-1)\cb1 \uc0\u8232 \cb3 print(ct([2,3,4]))
\f1 \cb1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\
\
\
\
\
\
\
\pard\pardeftab720\sl400\partightenfactor0

\f0 \cf2 Short Answer:
\f1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl400\partightenfactor0

\f0 \cf2 1.Why should lists never be used as default arguments?
\f1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\
They are mutable!! Every time the function is called, it will add to the same list. List variable should be set as none when using default arguments.\
\
\
\
\
\pard\pardeftab720\sl380\partightenfactor0

\f0 \cf2 \cb3 2. In less than six lines, write a function that satisfies the following:\cb1 \uc0\u8232 \cb3 assert(f("abc") == "abc")\cb1 \uc0\u8232 \cb3 assert(f("abc", True) == "ABC")\cb1 \uc0\u8232 \u8232 
\f1 f ( *args ):\
	if len(args) == 1:\
		return args\
	else:\
		return args[0].upper()\
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\
\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \cb3 3. Say we start with a 3x6 grid with the black squares as shown below. Then we right-click where the star is, to start a flood-fill from there. Write the numeric labels that result in each cell after flood-fill completes.\cb1 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx1440
\clvertalt \clcbpat2 \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx2880
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx4320
\clvertalt \clshdrawnil \clwWidth600\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx5760
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx7200
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx1440
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx2880
\clvertalt \clcbpat2 \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx4320
\clvertalt \clshdrawnil \clwWidth600\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx5760
\clvertalt \clcbpat2 \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx7200
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx1440
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx2880
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx4320
\clvertalt \clshdrawnil \clwWidth600\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx5760
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx7200
\clvertalt \clshdrawnil \clwWidth573\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf2 \clbrdrl\brdrs\brdrw20\brdrcf2 \clbrdrb\brdrs\brdrw20\brdrcf2 \clbrdrr\brdrs\brdrw20\brdrcf2 \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f2 \cf2 str
\f1 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell 
\pard\intbl\itap1\pardeftab720\sl280\partightenfactor0
\cf2 \cell \lastrow\row
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \cb3 Hint: The numbers are at the depth of each cell, so numbers may repeat\cb1 \
\cb3 Hint: the first label is 0, not 1 (so a 0 should be where the star is)\cb1 \
\cb3 Hint: Our recursive code tries to go up, down, left, then right. \cb1 \
\
\
# board is the 2D list board to fill\
# start is the tuple row, col where star is\
def floodfill(board, start, n = -1):\
	if isfull(board):\
		return board\
	else:\
		(row, col) = start\
		for i in range(len(board)):\
			if islegal(start):\
				board[row][col] = n + 1\
				solution = floodfill(board, (row + 1, col, n + 1)\
				if solution != None:\
					return solution\
				solution = floodfill(board, (row - 1, col, n + 1)\
				\cf2 \outl0\strokewidth0 if solution != None:\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 					return solution\
\cf2 \outl0\strokewidth0 \strokec2 				\cf2 \outl0\strokewidth0 solution = floodfill(board, (row, col - 1, n + 1)\
				\cf2 if solution != None:\
					return solution\
\cf2 				solution = floodfill(board, (row, col + 1, n + 1)\
				\cf2 if solution != None:\
					return solution\
				else: board[row][col] = -1\
		return None\
\
def callFloodFill(start):\
	board = []\
	for row in range(3):\
		board.append( [-1]*6 )\
	return floodfill(board, start)\
\
def isfull(board):\
	for row in range(len(board)):\
		for col in range(len(board[0]):\
			if board[row][col] == -1:\
				return False\
	return True\cf2 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \
\
\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \cb3 4. Draw a level-2 sierpinski triangle:\cb1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
def init (data):\
	data.x = data.width//4\
	data.s = \cf2 \outl0\strokewidth0 data.width//2\cf2 \outl0\strokewidth0 \strokec2 \
	data.level = 2\
	data.y = data.h - data.h//4\
\
Def drawTriangle(canvas, x, y, s, l):\
	if l == 0:\
		\cf2 \outl0\strokewidth0 canvas.create_polygon( (x, y), (x + s, y), (x + s//2,  y - (s*((3**0.5)/2)) )\
\
	else:\
		\cf2 drawTriangle(canvas, x, y, s//2, l - 1)\
		drawTriangle(canvas, x + s//2, y, s//2, l - 1)\
		drawTriangle(canvas, x + s//4, y - (s*((3**0.5)/4)), s//2, l - 1)\cf2 \outl0\strokewidth0 \strokec2 \
\
Def drawAll(canvas, data):\
	drawTriangle(canvas, data.x, data.y, data.s, data.level)\
\
\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \cb3 5. \'a0Unlike recursive fib(n), recursive fact(n) is fast even without memoization. In just a few words, why is this true? \cb1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
It does not do repeated work.\
\
\
\
\
\
\
\
\pard\pardeftab720\sl400\partightenfactor0

\f0 \cf2 FR
\f1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \cb3 FindSmallestDivishNumber(digits)						\cb1 \
\cb3 						\cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf2 \cb3 Background: We will say that a positive integer N is 'divish' (a coined term) if:\cb1 \
\cb3 * N contains no 0's, and \'a0\cb1 \
\cb3 * Each sequence of 3 digits in N is a multiple of 7, and \cb1 \
\cb3 * Each sequence of 3 digits in N is unique \cb1 \
\cb3 For example, we see that 61126 is divish because 112, 126, and 266 are all multiples of 7. As another example, we see that 1661125112 is not divish because it contains the digit sequence 112 twice. Also note that any positive integer N with fewer than 3 digits and no 0's is divish. With this in mind, write the function findSmallestDivishNumber(digits), that you can abbreviate as f(d), that takes a positive integer number of digits and uses backtracking to return the smallest divish number with that given number of digits, or None if no such number exists. To receive any credit, you must use backtracking here.			\cb1 \
\cb3 Hint: From the definition, we see that if a number N is divish, then all of its prefixes are also \'a0divish.\cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \cb3 	\cb1 \
	\
\
\
\
}